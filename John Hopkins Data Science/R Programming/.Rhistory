mean(1:1337)
a <- c(1,2,3,4,5,6,8,9,10,11)
b <- a + 24
b
plot(b0
plot(b)
plot(b)
c <- sum(a+b)
d <- mean(a,b)
d <- mean(a)
e <- mean(b)
f <- d+e
plot(c,d,e,f)
plot(b)
plot(a, b)
a <- c(1,2,3,4,5)
b <- c(6,7,8,9,10)
a+b
ab <- c(a,b)
ab
d <- c(1:10, 30:40, 5, 7, 9, 12)
median(d)
sum(d)
x <- 3
x <- NULL
help()
d <- c(31:50)
d
length(builtin())
length(builtins())
f <- rnorm(100)
hist(f)
f[3] <- 2.3
f <- rep(2.3,3)
f <- rnorm(100)
f[3] <- 2.3
seq(1,15,1)
rep(5:15,5)
c(5, letters)
sample(LETTERS,5,replace=F)
a <- sample(letters[1:4],100,replace=T)
a
pie(a)
pie(table(a))
length <- rnorm(10, 180, 10)
weight <- (length/100)^2 * 25
measurements <- data.frame(cbind(length, weight))
measurements <- round(measurements,4)
measurements
measurements$length <- round(measurements$length)
measurements$length
measurements <- round(measurements)
measurements
bt <- seq(60, 120, 1)
plot(bt, dnorm(bt, 90, 10), type="l", xlim=c(60, 120), main="blood pressure")
bt <- seq(60, 120, 1)
plot(bt, dnorm(bt, 90, 10), type="l", xlim=c(60, 120), main="one tailed test")
pnorm(72, 90, 10) # probability of randomly selecting a subject bt 72 or lower
abline(v=72) # Draw a line for 72 . v is the x-value for a vertical line
cord.x <- c(60,seq(60,72,1),72)
cord.y <- c(0,dnorm(seq(60, 72, 1), 90, 10),0)
polygon(cord.x,cord.y,col='skyblue')
text(70, 0.005, "blue area = p = 0.0359")
bt <- seq(60, 120, 1)
plot(bt, dnorm(bt, 90, 10), type="l", xlim=c(60, 120), main="two-tailed test")
pnorm(72, 90, 10)
abline(v=72)
cord.x <- c(60,seq(60,72,1),72)
cord.y <- c(0,dnorm(seq(60, 72, 1), 90, 10),0)
polygon(cord.x,cord.y,col='skyblue')
cord.x1 <- c(108,seq(108,120,1),120)
cord.y1 <- c(0,dnorm(seq(108, 120, 1), 90, 10),0)
polygon(cord.x1,cord.y1,col='skyblue')
text(65, 0.005, round(pnorm(72, 90, 10), 3))
text(115, 0.005, round(pnorm(72, 90, 10), 3))
text(75, 0.02,  " p = 0.072 "  )
x <- seq(-4,4,0.05); plot (dnorm(x))
curve(dnorm(x), from= -4, to=4)
x <- seq(-4,4,0.05); plot (dnorm(x), type="l")
plot(dnorm(cord.x,90,10))
pnorm(80,90,10)
pnorm( mean=90, sd=10, 80)
pnorm(10,80,90)
pnorm( mean=90, sd=10, 100)
pnorm(100,90,10)
help(pnorm())
help(pnorm)
pnorm(>100,90,10)
pnorm(100,90,10,lower.tail=F)
pnorm(100,90,10,lower.tail=F),2
pnorm(100,90,10,lower.tail=F),2)
pnorm(100,90,10,lower.tail=F,2)
round(pnorm(100,90,10,lower.tail=F)2)
round(pnorm(100,90,10,lower.tail=F),2)
round(50000 * ( 1 - pnorm(190, 182, 7)))
round(50000*((1-pnorm(180,182,7))+pnorm(190,182,7))
round(50000*((1-pnorm(180,182,7))+pnorm(190,182,7))
round(50000*((1-pnorm(180,182,7))+pnorm(190,182,7)))
a <- (1-pnorm(180,182,7))
b <- pnorm(190,182,7)
round(50000*(a-b))
round(50000*(b-a))
pnorm(180,182,7)
pnorm(190,182,7)
0.87-0.38
50000*.49
round(qnorm(c(0.025, 0.975), 90, 10))
curve(dnorm(x, 90, 10), from= 60, to=120)
segments(qnorm(c(0.025, 0.975), 90, 10), 0, qnorm(c(0.025, 0.975), 90, 10),
dnorm(qnorm(c(0.025, 0.975), 90, 10), 90, 10))
help(segments)
curve(dnorm(x, 90, 10), from= 60, to=120)
segments(qnorm(c(0.025, 0.975), 90, 10), 0, qnorm(c(0.025, 0.975), 90, 10),
dnorm(qnorm(c(0.05, 0.95), 90, 10), 90, 10))
curve(dnorm(x, 90, 10), from= 60, to=120)
segments(qnorm(c(0.05, 0.95), 90, 10), 0, qnorm(c(0.05, 0.95), 90, 10),
dnorm(qnorm(c(0.05, 0.95), 90, 10), 90, 10))
curve(dnorm(x, 90, 10), from= 60, to=120)
segments(qnorm(c(0.05, 0.95), 90, 10), 0, qnorm(c(0.05, 0.95), 90, 10),dnorm(qnorm(c(0.05, 0.95), 90, 10), 90, 10))
#simple z table
x<-seq(0,3,0.1)
z<-round(pnorm(x,0,1),4)
ztable <- cbind(z=x,prob=z)
head(ztable)
ztable
pnorm(1)
x <-seq(-4,4,0.1); y <-dnorm(x); plot(x,y,type="l");
x.points <-seq(-4,1,0.1); y.points <-dnorm(x.points)
polygon(c(x.points,1),c(y.points,0),col="blue")
#Visualizing hypothesis tests in R
#The red distribution is what you can expect to see if you plot
#repeated samples when the null hypothesis is true.
#You can recognize a null hypothesis because it sounds like:
# "there was no difference"
#for instance:
#"The intervention did not affect blood pressure."
#one tailed test
#rare in health sciences, more common in industrial process control
x=seq(50,140,length=200)
y1=dnorm(x,80, 10)
plot(x,y1,type='l',lwd=2,col='red')
y2=dnorm(x,110, 10)
lines(x,y2,type='l',lwd=2,col='blue')
abline(v=qnorm(0.95,80,10))
#two tailed test
#common in the health sciences, because in most cases, both
#an increase or a decrease in a variable would affect health
x=seq(50,140,length=200)
y1=dnorm(x,80, 10)
plot(x,y1,type='l',lwd=2,col='red')
y2=dnorm(x,110, 10)
lines(x,y2,type='l',lwd=2,col='blue')
abline(v=qnorm(0.025,80,10))
abline(v=qnorm(0.975,80,10))
#colour the rejection area, also referred to as alpha.
#If the p-value is equal to or lower than alpha - reject the null hypothesis
x=seq(50,140,length=200)
y1=dnorm(x,80, 10)
plot(x,y1,type='l',lwd=2,col='red')
y2=dnorm(x,110, 10)
lines(x,y2,type='l',lwd=2,col='blue')
cord.x1 <- c((round(qnorm(0.975, 80, 10))),seq((round(qnorm(0.975, 80, 10))), 120,1),120)
cord.y1 <- c(0,dnorm(seq((round(qnorm(0.975, 80, 10))), 120, 1), 80, 10),0)
polygon(cord.x1,cord.y1,col='red')
cord.x2 <- c(50,seq(50,round(qnorm(0.025, 80, 10),1)),round(qnorm(0.025, 80, 10)))
cord.y2 <- c(0,dnorm(seq(50,round(qnorm(0.025, 80, 10),1)), 80, 10),0)
polygon(cord.x2,cord.y2,col='red')
#Imagine that the alternative hypothesis were true.
#Beta is the risk that you will keep (=not reject) the false null hypothesis
x=seq(50,140,length=200)
y1=dnorm(x,80, 10)
plot(x,y1,type='l',lwd=2,col='red')
y2=dnorm(x,110, 10)
lines(x,y2,type='l',lwd=2,col='blue')
cord.x2<- c(0,seq((round(1-qnorm(0.025,110,10))),100,1),100)
cord.y2 <- c(0,dnorm(seq((round(1-qnorm(0.025, 110, 10))), 100, 1), 110, 10),0)
polygon(cord.x2,cord.y2,col='red')
abline(v=round(qnorm(0.975, 80, 10, lower.tail=T)))
abline(v=round(qnorm(0.025, 80, 10, lower.tail=T)))
text(95,0.005, "ß ",xpd=5)
#Statistical power, 1-beta, is the probability to reject a false null hypothesis
x<- seq(50,140,length=200)
y1<- dnorm(x,80, 10)
plot(x,y1,type='l',lwd=2,col='red')
y2<- dnorm(x,110, 10)
lines(x,y2,type='l',lwd=2,col='blue')
cord.x2<- c(0,seq((round(1-qnorm(0.025,110,10))),100,1),100)
cord.y2 <- c(0,dnorm(seq((round(1-qnorm(0.025, 110, 10))), 100, 1), 110, 10),0)
polygon(cord.x2,cord.y2,col='red')
abline(v=round(qnorm(0.975, 80, 10, lower.tail=T)))
abline(v=round(qnorm(0.025, 80, 10, lower.tail=T)))
cord.x1 <- c(100,seq(round(qnorm(0.975, 80, 10, lower.tail=T)), 140,1),140)
cord.y1 <- c(0,dnorm(seq(round(qnorm(0.975, 80, 10, lower.tail=T)),140, 1), 110, 10),0)
polygon(cord.x1,cord.y1,col='6')
text(95,0.005, "ß ",xpd=5)
text(115,0.005, "1-ß ",xpd=5)
body <-
read.table("http://www.amstat.org/publications/jse/datasets/body.dat.txt")
dim(body)  #Check that dimensions are 507  25
BodyMeasurements <- c("Biacromial_diameter","Biiliac_diameter",
"Bitrochanteric_diameter", "Chest_depth","Chest_diameter",
"Elbow_diameter","Wrist_diameter", "Knee_diameter","Ankle_diameter",
"Shoulder_girth","Chest_girth", "Waist_girth","Navel_girth",
"Hip_girth","Thigh_girth", "Bicep_girth","Forearm_girth",
"Knee_girth","Calf_max_girth", "Ankle_min_girth","Wrist_min_girth",
"Age","Weight","Height","Gender")
names(body) <- BodyMeasurements
#The appropriate variable type of gender is factor
body$Gender <- as.factor(body$Gender)
table(body$Gender)
summary(body$Gender)
dim(body[body$Gender==0,])
dim(body[body$Gender==1,])
help("row.names")
help("matrix")
help(index)
help("factor")
help("Summary.numeric_version")
help("factor")
help("order")
help("subset")
help("plot")
help("plot")
help(hist)
help("data.frame")
help(cbind)
help("name")
help("names")
help("colnames")
help("data.frame")
help(cbind)
help("matrix")
help("layout")
help(lm)
help(abline)
help(text)
ctr <- 1
while(ctr <= 7) {}
while(ctr <= 7){print(paste("ctr is set to",ctr))ctr <- ctr +1}
while(ctr <= 7) {print(paste("ctr is set to",ctr))ctr <- ctr +1}
while(ctr <= 7) {print(paste("ctr is set to",ctr))ctr <- ctr +1}
while(ctr <= 7) {print(paste("ctr is set to",ctr))ctr <- ctr +1}
while (ctr <= 7) {print(paste("ctr is set to",ctr))ctr <- ctr +1}
while (ctr <= 7) {print(paste("ctr is set to",ctr))ctr <- ctr+1}
while(ctr <= 7) {print(paste("ctr is set to",ctr)) ctr <- ctr+1}
while(ctr <= 7) {print(paste("ctr is set to",ctr));ctr <- ctr+1}
args(sample)
help(sample)
args(mean)
help(mean)
help(read.table)
help(function)
help(function)
?function
help(function)
search()
install.packages("ggvis")
library("ggvis")
search()
install.packages("ggplot")
install.packages("ggplot2")
library("ggplot2")
search()
install.packages(swirl)
install.packages("swirl")
library("swirl")
rm(list=ls())
swirl()
swirl()
library()
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
y <- c(3, 2, 10)
x <- list(2, "a", "b", TRUE)
x[[2]]
class(x[[2]])
x[2]
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x == 4] > 10
x[x >= 11] <- 4
x
read.csv("hw1_data")
getwd()
setwd("C:/Users/Daniel Gremmell/Desktop/John Hopkins Data Science")
read.csv("hw1_data")
read.csv("hw1_data.csv")
setwd("C:/Users/Daniel Gremmell/Desktop/John Hopkins Data Science/R Programming")
read.csv("hw1_data")
read.csv("hw1_data.csv")
hw_data <- read.csv("hw1_data")
hw_data <- read.csv("hw1_data.csv")
head(hw_data)
tail(hw_data)
hw_data$ozone[47,]
hw_data$ozone[47,1]
hw_data[47,]
na.action(hw_data)
is.na(hw_data)
sum(is.na(hw_data$Ozone))
mean(is.na(hw_data)==FALSE)
mean(is.na(hw_data$Ozone)==FALSE)
mean(hw_data$ozone)
hw_data2 <- is.na(hw_data$ozone)==FALSE
hw_data
is.na(hw_data)
hw_data2 <- subset(is.na(hw_data)==FALSE)
hw_data2
head(hw_data)
is.na(hw_data$ozone)
help(mean)
mean(hw_data,na.rm=TRUE)
mean(hw_data,trim=0,na.rm=TRUE)
mean(hw_data$ozone,trim=0,na.rm=TRUE)
help("na.exclude")
hw_data2 <- na.exclude(hw_data)
hw_data2
mean(hw_data2)
mean(hw_data2[,1])
mean(hw_data$ozone)
hw_data2[,1]
hw_data2["ozone"]
hw_data2[ozone]
hw_data2[[ozone]]
hw_data2[["ozone"]]
help("subset")
hw_data3 <- subset(hw_data,hw_data$Ozone>31&hw_data$Temp>90)
hw_data3
mean(hw_data3$Solar.R)
hw_data4 <- subset(hw_data,hw_data$month==6)
hw_data4
hw_data
hw_data4 <- subset(hw_data,hw_data$Month==6)
mean(hw_data4$Temp)
hw_data4 <- subset(hw_data,hw_data$Month==5)
max(hw_data4$Ozone)
max(hw_data4$Ozone,na.rm=TRUE)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- 1:4
y <- 2:3
x+y
head(hw_data)
tail(hw_data)
hw_data[47,]
sum(is.na(hw_data$Ozone))
mean(hw_data2[,1])
mean(hw_data3$Solar.R)
hw_data4 <- subset(hw_data,hw_data$month==6)
hw_data4 <- subset(hw_data,hw_data$Month==6)
mean(hw_data4$Temp)
hw_data4 <- subset(hw_data,hw_data$Month==5)
max(hw_data4$Ozone)
max(hw_data4$Ozone,na.rm=TRUE)
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
help(dir.create)
?dir.create
dir.create(file.path("testdir","testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2",recursive = TRUE)
setwd(old.dir)
unlink("testdir",recursive = TRUE)
save.image("Workspace.RData")
